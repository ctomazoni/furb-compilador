#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = Stream
Parser = LL
#RegularDefinitions
mai : [A-Z]
min : [a-z]
dig : [0-9]
letra : {mai}|{min}
coment_linha: !![^\n]*
coment_bloco: $[^$]*$



#Tokens
//ignorar caracteres de formatação
:[\t\n\s]
: {coment_linha}
: {coment_bloco}

identificador:{letra}(_?({letra}|{dig})+)*_? 
const_inteira: 0|[1-9]({dig})*
const_real: (0|[1-9]({dig})*)","({dig})+
const_caract: \"(([^\n\\\"])*|"\\"|"\"\")*\"

//palavras reservadas
BOOL = identificador : "bool"
CONSTS = identificador : "consts"
DEF = identificador : "def"
END = identificador : "end"
EXECUTE = identificador : "execute"
FALSE = identificador : "false"
FLOAT = identificador : "float"
GET = identificador : "get"
IFFALSE = identificador : "ifFalse"
IFTRUE = identificador : "ifTrue"
INPUT = identificador : "input"
INT = identificador : "int"
PRINT = identificador : "print"'
PRINTLN = identificador : "println"
SET = identificador : "set"
STR = identificador : "str"
TRUE = identificador : "true"
TYPES = identificador : "types"
VAR = identificador : "var"
WHILEFALSE = identificador : "whileFalse"
WHILETRUE = identificador : "whileTrue"

//simbolos especiais
":"
"("
")"
"="
":="
","
"&&"
"||"
"!"
"!="
"<"
">="
">"
"<="
"+"
"-"
"*"
"/"







#NonTerminals
<programa>
<definicao_tipos>
<def_tipo>
<def_tipo_1>
<eh_tipo>
<simples>
<composto>
<lista_campos>
<lista_campos_1>
<campo>
<definicao_constantes>
<constantes>
<constantes_1>
<lista_identificadores>
<lista_identificadores_1>
<valor>
<declaracao_variaveis>
<variaveis>
<variaveis_1>
<tipo>
<lista_comandos>
<lista_comandos_1>
<comando>
<comando_1>
<comando_2>
<comando_3>
<comando_entrada>
<comando_saida>
<lista_expressao>
<lista_expressao_1>


<expressão>
<expressão1>
<elemento>
<relacional>
<relacional_1>
<operador_relacional>
<aritmética>
<aritimética_1>
<termo>
<termo_1>
<fator>
<fator_1>
#Grammar

<programa> ::= #15 DEF <definicao_tipos> <definicao_constantes> <declaracao_variaveis> EXECUTE <lista_comandos> #16;

<definicao_tipos> ::= î | TYPES <def_tipo>;
<def_tipo> ::= identificador ":" <eh_tipo> <def_tipo_1> ;
<def_tipo_1> ::= î | <def_tipo>;

<eh_tipo> ::= <simples> | <composto>;
<simples> ::= INT | FLOAT | STR | BOOL;
<composto> ::= "("<lista_campos>")";
<lista_campos> ::= <campo><lista_campos_1>;
<lista_campos_1> ::= î | <lista_campos>;

<campo> ::= identificador ":" <simples>;

<definicao_constantes> ::= î | CONSTS <constantes>;

<constantes> ::= <lista_identificadores> "=" <valor>#32<constantes_1>;
<constantes_1> ::= î | <constantes>;

<lista_identificadores> ::= identificador#22<lista_identificadores_1>;
<lista_identificadores_1> ::= î | ","<lista_identificadores>;

<valor> ::= const_inteira | const_real | const_caract | TRUE | FALSE ;

<declaracao_variaveis> ::= î | VAR <variaveis>;

<variaveis> ::= <lista_identificadores> ":" <tipo>#21#23<variaveis_1>;
<variaveis_1> ::= î | <variaveis>;

<tipo> ::= <simples> | identificador;

<lista_comandos> ::= <comando><lista_comandos_1>;
<lista_comandos_1> ::= î | <lista_comandos>;

<comando> ::= identificador <comando_1> | <comando_entrada> | <comando_saida> | #27"(" <expressão> ")" <comando_2>;
<comando_1> ::= #22":=" <expressão>#26 | SET "(" identificador"," <expressão> ")";
<comando_2> ::=  IFTRUE#28":" <lista_comandos><comando_3> | 
	         IFFALSE#28":" <lista_comandos> END#29| 
		WHILETRUE#28":" <lista_comandos> END#31|
		WHILEFALSE#28":" <lista_comandos> END#31;

<comando_3> ::=  END#29| #30IFFALSE ":" <lista_comandos> END#29;


<comando_entrada> ::= INPUT "(" <lista_identificadores>#24")";
<comando_saida> ::= PRINT "(" <lista_expressao> ")" | PRINTLN "(" <lista_expressao> ")" #17;
<lista_expressao> ::= <expressão> #14 <lista_expressao_1>;
<lista_expressao_1> ::= î | ","<lista_expressao>;


<expressão> ::= <elemento><expressão1>;
<expressão1> ::= "&&" <elemento> #18 <expressão1> | "||" <elemento> #19 <expressão1> | î;
<elemento> ::= <relacional> | TRUE #11 | FALSE #12 | "!" <elemento> #13;
<relacional> ::= <aritmética> <relacional_1>;
<relacional_1> ::= î | <operador_relacional> #9 <aritmética> #10;

<operador_relacional> ::= "=" | "!=" | "<" | "<=" | ">" | ">=";

<aritmética> ::= <termo><aritimética_1>;
<aritimética_1> ::= î | "+" <termo> #1 <aritimética_1> | "-" <termo> #2 <aritimética_1>;

<termo> ::= <fator><termo_1>;
<termo_1> ::=  î | "*" <fator> #3 <termo_1> | "/" <fator> #4 <termo_1>;

<fator> ::= identificador#25<fator_1> | const_inteira #5 | const_real #6 | const_caract #20 | "(" <expressão> ")" |
 	    "+" <fator> #7 | "-" <fator> #8;

<fator_1> ::=  î | GET "(" identificador ")";
